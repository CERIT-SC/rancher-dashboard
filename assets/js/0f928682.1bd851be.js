"use strict";(self.webpackChunkrancher_ui_devkit=self.webpackChunkrancher_ui_devkit||[]).push([[5088],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>m});var a=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=a.createContext({}),p=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(o.Provider,{value:n},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),u=i,m=d["".concat(o,".").concat(u)]||d[u]||g[u]||r;return t?a.createElement(m,s(s({ref:n},c),{},{components:t})):a.createElement(m,s({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,s=new Array(r);s[0]=u;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[d]="string"==typeof e?e:i,s[1]=l;for(var p=2;p<r;p++)s[p]=t[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7016:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>g,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=t(8168),i=(t(6540),t(5680));const r={},s="On-screen Text and Translations",l={unversionedId:"code-base-works/on-screen-text-and-translations",id:"code-base-works/on-screen-text-and-translations",title:"On-screen Text and Translations",description:"This page covers Internationalisation (i18n) and localisation (l10n).",source:"@site/docs/code-base-works/on-screen-text-and-translations.md",sourceDirName:"code-base-works",slug:"/code-base-works/on-screen-text-and-translations",permalink:"/dashboard/code-base-works/on-screen-text-and-translations",draft:!1,tags:[],version:"current",lastUpdatedAt:1714709984,formattedLastUpdatedAt:"May 3, 2024",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Sortable Table",permalink:"/dashboard/code-base-works/sortable-table"},next:{title:"Style and Format",permalink:"/dashboard/code-base-works/style"}},o={},p=[{value:"Internationalization (i18n)",id:"internationalization-i18n",level:2},{value:"Using Variables in i18n Paths",id:"using-variables-in-i18n-paths",level:2},{value:"l10n",id:"l10n",level:2},{value:"Checking for missing translation strings",id:"checking-for-missing-translation-strings",level:2},{value:"Comments",id:"comments",level:3},{value:"i18n-uses",id:"i18n-uses",level:4},{value:"i18n-ignore",id:"i18n-ignore",level:4},{value:"Translation Strings",id:"translation-strings",level:4}],c={toc:p},d="wrapper";function g(e){let{components:n,...t}=e;return(0,i.yg)(d,(0,a.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"on-screen-text-and-translations"},"On-screen Text and Translations"),(0,i.yg)("p",null,"This page covers Internationalisation (i18n) and localisation (l10n)."),(0,i.yg)("h2",{id:"internationalization-i18n"},"Internationalization (i18n)"),(0,i.yg)("p",null,"Any code producing messages, labels, numbers, dates, times, and the like should use the ",(0,i.yg)("inlineCode",{parentName:"p"},"i18n")," store and translation strings to generate and format them instead of hardcoding English or American-isms anywhere.   Messages and number formatting uses ",(0,i.yg)("a",{parentName:"p",href:"https://formatjs.io/docs/intl-messageformat"},"ICU templating")," for very powerful pluralization and customizing."),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"assets/translations")," dir stores a YAML file with translations for each supported language."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},'English is automatically used as the "fallback" if a particular key is missing from a non-English language.'),(0,i.yg)("li",{parentName:"ul"},"If you don't have a native translation for a particular key, just leave that key out of the language"),(0,i.yg)("li",{parentName:"ul"},"Do not duplicate the English string into other languages.")),(0,i.yg)("p",null,"Translations should be the largest phrase that makes sense as a single key, rather than several separate things rendered in a fixed order."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},'For example "about 2 minutes remaining" should be a single translation: ',(0,i.yg)("inlineCode",{parentName:"li"},"About {n, number} {n, plural, one { minute }, other { minutes }} remaining"),"."),(0,i.yg)("li",{parentName:"ul"},"Not one for ",(0,i.yg)("inlineCode",{parentName:"li"},"About"),", one for ",(0,i.yg)("inlineCode",{parentName:"li"},"minute"),", one for ",(0,i.yg)("inlineCode",{parentName:"li"},"minutes"),", one for ",(0,i.yg)("inlineCode",{parentName:"li"},"remaining"),", and some code picking and choosing which to concatenate.")),(0,i.yg)("p",null,"All on screen text should be localised and implemented in the default ",(0,i.yg)("inlineCode",{parentName:"p"},"en-US")," locale. There are different ways to access localised text"),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},(0,i.yg)("inlineCode",{parentName:"p"},"t")," can be exposed via adding the i18n getter as a computed property with ",(0,i.yg)("inlineCode",{parentName:"p"},"...mapGetters({ t: 'i18n/t' })"))),(0,i.yg)("p",null,"In HTML"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-html"},'<t k="<path to localisation>" />\n{{ t("<path to localisation>") }}\n')),(0,i.yg)("p",null,"Many components will also accept a localisation path via a ",(0,i.yg)("inlineCode",{parentName:"p"},"value-key")," property, instead of the translated text in ",(0,i.yg)("inlineCode",{parentName:"p"},"value"),"."),(0,i.yg)("p",null,"In JS/TS"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ts"},"this.t('<path to localisation>')\n")),(0,i.yg)("p",null,"A localisation can be checked with"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ts"},"this.$store.getters['i18n/exists']('<path to localisation>')\n\nthis.$store.getters['i18n/withFallback']('<path to localisation>', null, '<fallback>'))\n")),(0,i.yg)("h2",{id:"using-variables-in-i18n-paths"},"Using Variables in i18n Paths"),(0,i.yg)("p",null,"In Javascript files, variables in localisation paths must be wrapped in quotation marks when the variable contains a slash."),(0,i.yg)("p",null,"For example, if we want to dynamically fill in the description of a resource based on its type, we can use a ",(0,i.yg)("inlineCode",{parentName:"p"},"type")," variable when referencing the localisation path to the description:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ts"},"{\n  description: this.t(`secret.typeDescriptions.'${ type }'.description`),\n}\n")),(0,i.yg)("p",null,"In this case, the quotation marks are required because some Secret types, such as ",(0,i.yg)("inlineCode",{parentName:"p"},"kubernetes.io/basic-auth"),", include a slash."),(0,i.yg)("h2",{id:"l10n"},"l10n"),(0,i.yg)("p",null,"Localisation files can be found in ",(0,i.yg)("inlineCode",{parentName:"p"},"./assets/translations/en-us.yaml"),"."),(0,i.yg)("p",null,"Please follow precedents in file to determine where new translations should be place."),(0,i.yg)("p",null,"Form fields are conventionally defined in translations as ",(0,i.yg)("inlineCode",{parentName:"p"},"<some prefix>"),".",(0,i.yg)("inlineCode",{parentName:"p"},"<field name>"),".{label,description,enum options if applicable} e.g."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yml"},"account:\n  apiKey:\n    description:\n      label: Description\n      placeholder: Optionally enter a description to help you identify this API Key\n")),(0,i.yg)("p",null,"If a translation is not included in the user's selected language, it will fall back to English. The only time the Rancher UI devs should modify a non-English translation is when a key is renamed."),(0,i.yg)("h2",{id:"checking-for-missing-translation-strings"},"Checking for missing translation strings"),(0,i.yg)("p",null,"The script ",(0,i.yg)("inlineCode",{parentName:"p"},"scripts/check-i18n")," can be used to check for missing translation strings."),(0,i.yg)("p",null,"It uses a set of regular expressions to detect for translation strings being used in the code base. It will report any string references that it finds that it does not find a corresponding translation for - this is an indication of a missing translation string."),(0,i.yg)("p",null,"This script is run as part of the dashboard Continuos Integration via GitHub actions."),(0,i.yg)("p",null,"The script accepts two optional arguments:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"-s Print out the details of translations strings found in the localisation files that don't appear to be used by the code"),(0,i.yg)("li",{parentName:"ul"},"-x Don't set the exit code if there are errors detected")),(0,i.yg)("h3",{id:"comments"},"Comments"),(0,i.yg)("p",null,"Since the script uses regular expressions, there are cases where it might:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Incorrectly detect a use of a translation string in the code that is not such"),(0,i.yg)("li",{parentName:"ul"},"Not be able to detect that a translation string has been used")),(0,i.yg)("p",null,"To address these issues, you need to use comments in your code to assist the i18n checker script."),(0,i.yg)("p",null,"Comments can be placed at the start of the line, or as part of a line of code at the end. They can not be added to templates, so\ncomments should be added at the top of the code file for these."),(0,i.yg)("h4",{id:"i18n-uses"},"i18n-uses"),(0,i.yg)("p",null,"You can use a comment of the form:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"// i18n-uses TRANSLATION\n")),(0,i.yg)("p",null,"to indicate that the string ",(0,i.yg)("inlineCode",{parentName:"p"},"TRANSLATION")," is used in the code."),(0,i.yg)("h4",{id:"i18n-ignore"},"i18n-ignore"),(0,i.yg)("p",null,"You can use a comment of the form:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"// i18n-ignore TRANSLATION\n")),(0,i.yg)("p",null,"to indicate that the string ",(0,i.yg)("inlineCode",{parentName:"p"},"TRANSLATION")," should be ignored and is not a reference to a translation string."),(0,i.yg)("h4",{id:"translation-strings"},"Translation Strings"),(0,i.yg)("p",null,"With both ",(0,i.yg)("inlineCode",{parentName:"p"},"i18n-uses")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"i18n-ignore"),", the ",(0,i.yg)("inlineCode",{parentName:"p"},"TRANSLATION")," string can be:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"A simple string, e.g. ",(0,i.yg)("inlineCode",{parentName:"li"},"area.subarea.name")),(0,i.yg)("li",{parentName:"ul"},"A regular expression, e.g. ",(0,i.yg)("inlineCode",{parentName:"li"},"/area\\.subarea\\.name/")),(0,i.yg)("li",{parentName:"ul"},"A simple string with wild-cards specified using ",(0,i.yg)("inlineCode",{parentName:"li"},"*"),", e.g. ",(0,i.yg)("inlineCode",{parentName:"li"},"area.subarea.*")," or ",(0,i.yg)("inlineCode",{parentName:"li"},"area.*.name"))))}g.isMDXComponent=!0}}]);