"use strict";(self.webpackChunkrancher_ui_devkit=self.webpackChunkrancher_ui_devkit||[]).push([[4167],{5680:(e,t,n)=>{n.d(t,{xA:()=>m,yg:()=>f});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=l(n),d=o,f=u["".concat(s,".").concat(d)]||u[d]||c[d]||i;return n?r.createElement(f,a(a({ref:t},m),{},{components:n})):r.createElement(f,a({ref:t},m))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:o,a[1]=p;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3660:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var r=n(8168),o=(n(6540),n(5680));const i={},a="Auto-Import Folders",p={unversionedId:"extensions/api/components/auto-import",id:"extensions/api/components/auto-import",title:"Auto-Import Folders",description:"Rancher simplifies the registration of components through auto-import folders.",source:"@site/docs/extensions/api/components/auto-import.md",sourceDirName:"extensions/api/components",slug:"/extensions/api/components/auto-import",permalink:"/dashboard/extensions/api/components/auto-import",draft:!1,tags:[],version:"current",lastUpdatedAt:1714509256,formattedLastUpdatedAt:"Apr 30, 2024",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Custom Node Driver UI",permalink:"/dashboard/extensions/api/components/node-drivers"},next:{title:"Common Types",permalink:"/dashboard/extensions/api/common"}},s={},l=[],m={toc:l},u="wrapper";function c(e){let{components:t,...n}=e;return(0,o.yg)(u,(0,r.A)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"auto-import-folders"},"Auto-Import Folders"),(0,o.yg)("p",null,"Rancher simplifies the registration of components through auto-import folders."),(0,o.yg)("p",null,"This must feature must be enabled in an extension, by calling the ",(0,o.yg)("inlineCode",{parentName:"p"},"importTypes")," function in the extension's initialization function, for example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"import { importTypes } from '@rancher/auto-import';\n\n// Initialize the extension\nexport default function(plugin: IPlugin) {\n  // Auto-import model, detail, edit from the folders\n  importTypes(plugin);\n\n  // ...\n}\n")),(0,o.yg)("p",null,"With this enabled, the extension build tooling will auto-generate component registration for you, based on folder names, without you having\nto do this manually."),(0,o.yg)("p",null,"The folder names match the ",(0,o.yg)("inlineCode",{parentName:"p"},"type")," property of the ",(0,o.yg)("inlineCode",{parentName:"p"},"register")," function. For example, to automatically register a ",(0,o.yg)("inlineCode",{parentName:"p"},"list")," component, create a folder named ",(0,o.yg)("inlineCode",{parentName:"p"},"list"),"\nin your extension and ensure the code above is added."),(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"ID")," of the component is taken from the filename, so to automatically get the equivalent of:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"import NamespaceList from './NamespaceList.vue`;\n\n// Initialize the extension\nexport default function(plugin: IPlugin) {\n\n  plugin.register('list', 'namespace', NamespaceList);\n\n  // ...\n}\n")),(0,o.yg)("p",null,"you would instead create the component ",(0,o.yg)("inlineCode",{parentName:"p"},"namespace.vue")," in the ",(0,o.yg)("inlineCode",{parentName:"p"},"list")," folder. Here the filename ",(0,o.yg)("inlineCode",{parentName:"p"},"namespace.vue")," matches the id ",(0,o.yg)("inlineCode",{parentName:"p"},"namespace")," (the ",(0,o.yg)("inlineCode",{parentName:"p"},".vue")," extension is ignored)."))}c.isMDXComponent=!0}}]);