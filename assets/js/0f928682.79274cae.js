"use strict";(self.webpackChunkrancher_ui_devkit=self.webpackChunkrancher_ui_devkit||[]).push([[2944],{5788:(e,n,a)=>{a.d(n,{Iu:()=>c,yg:()=>y});var t=a(1504);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=t.createContext({}),p=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},c=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),g=i,y=d["".concat(s,".").concat(g)]||d[g]||u[g]||r;return a?t.createElement(y,l(l({ref:n},c),{},{components:a})):t.createElement(y,l({ref:n},c))}));function y(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=g;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[d]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=a[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"},7516:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var t=a(5072),i=(a(1504),a(5788));const r={},l="On-screen Text and Translations",o={unversionedId:"code-base-works/on-screen-text-and-translations",id:"code-base-works/on-screen-text-and-translations",title:"On-screen Text and Translations",description:"This page covers Internationalisation (i18n) and localisation (l10n).",source:"@site/docs/code-base-works/on-screen-text-and-translations.md",sourceDirName:"code-base-works",slug:"/code-base-works/on-screen-text-and-translations",permalink:"/dashboard/code-base-works/on-screen-text-and-translations",draft:!1,tags:[],version:"current",lastUpdatedAt:1707920675,formattedLastUpdatedAt:"Feb 14, 2024",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Sortable Table",permalink:"/dashboard/code-base-works/sortable-table"},next:{title:"Style and Format",permalink:"/dashboard/code-base-works/style"}},s={},p=[{value:"Internationalization (i18n)",id:"internationalization-i18n",level:2},{value:"Using Variables in i18n Paths",id:"using-variables-in-i18n-paths",level:2},{value:"l10n",id:"l10n",level:2}],c={toc:p},d="wrapper";function u(e){let{components:n,...a}=e;return(0,i.yg)(d,(0,t.c)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"on-screen-text-and-translations"},"On-screen Text and Translations"),(0,i.yg)("p",null,"This page covers Internationalisation (i18n) and localisation (l10n)."),(0,i.yg)("h2",{id:"internationalization-i18n"},"Internationalization (i18n)"),(0,i.yg)("p",null,"Any code producing messages, labels, numbers, dates, times, and the like should use the ",(0,i.yg)("inlineCode",{parentName:"p"},"i18n")," store and translation strings to generate and format them instead of hardcoding English or American-isms anywhere.   Messages and number formatting uses ",(0,i.yg)("a",{parentName:"p",href:"https://formatjs.io/docs/intl-messageformat"},"ICU templating")," for very powerful pluralization and customizing."),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"assets/translations")," dir stores a YAML file with translations for each supported language."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},'English is automatically used as the "fallback" if a particular key is missing from a non-English language.'),(0,i.yg)("li",{parentName:"ul"},"If you don't have a native translation for a particular key, just leave that key out of the language"),(0,i.yg)("li",{parentName:"ul"},"Do not duplicate the English string into other languages.")),(0,i.yg)("p",null,"Translations should be the largest phrase that makes sense as a single key, rather than several separate things rendered in a fixed order."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},'For example "about 2 minutes remaining" should be a single translation: ',(0,i.yg)("inlineCode",{parentName:"li"},"About {n, number} {n, plural, one { minute }, other { minutes }} remaining"),"."),(0,i.yg)("li",{parentName:"ul"},"Not one for ",(0,i.yg)("inlineCode",{parentName:"li"},"About"),", one for ",(0,i.yg)("inlineCode",{parentName:"li"},"minute"),", one for ",(0,i.yg)("inlineCode",{parentName:"li"},"minutes"),", one for ",(0,i.yg)("inlineCode",{parentName:"li"},"remaining"),", and some code picking and choosing which to concatenate.")),(0,i.yg)("p",null,"All on screen text should be localised and implemented in the default ",(0,i.yg)("inlineCode",{parentName:"p"},"en-US")," locale. There are different ways to access localised text"),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},(0,i.yg)("inlineCode",{parentName:"p"},"t")," can be exposed via adding the i18n getter as a computed property with ",(0,i.yg)("inlineCode",{parentName:"p"},"...mapGetters({ t: 'i18n/t' })"))),(0,i.yg)("p",null,"In HTML"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-html"},'<t k="<path to localisation>" />\n{{ t("<path to localisation>") }}\n')),(0,i.yg)("p",null,"Many components will also accept a localisation path via a ",(0,i.yg)("inlineCode",{parentName:"p"},"value-key")," property, instead of the translated text in ",(0,i.yg)("inlineCode",{parentName:"p"},"value"),"."),(0,i.yg)("p",null,"In JS/TS"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ts"},"this.t('<path to localisation>')\n")),(0,i.yg)("p",null,"A localisation can be checked with"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ts"},"this.$store.getters['i18n/exists']('<path to localisation>')\n\nthis.$store.getters['i18n/withFallback']('<path to localisation>', null, '<fallback>'))\n")),(0,i.yg)("h2",{id:"using-variables-in-i18n-paths"},"Using Variables in i18n Paths"),(0,i.yg)("p",null,"In Javascript files, variables in localisation paths must be wrapped in quotation marks when the variable contains a slash."),(0,i.yg)("p",null,"For example, if we want to dynamically fill in the description of a resource based on its type, we can use a ",(0,i.yg)("inlineCode",{parentName:"p"},"type")," variable when referencing the localisation path to the description:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ts"},"{\n  description: this.t(`secret.typeDescriptions.'${ type }'.description`),\n}\n")),(0,i.yg)("p",null,"In this case, the quotation marks are required because some Secret types, such as ",(0,i.yg)("inlineCode",{parentName:"p"},"kubernetes.io/basic-auth"),", include a slash."),(0,i.yg)("h2",{id:"l10n"},"l10n"),(0,i.yg)("p",null,"Localisation files can be found in ",(0,i.yg)("inlineCode",{parentName:"p"},"./assets/translations/en-us.yaml"),"."),(0,i.yg)("p",null,"Please follow precedents in file to determine where new translations should be place."),(0,i.yg)("p",null,"Form fields are conventionally defined in translations as ",(0,i.yg)("inlineCode",{parentName:"p"},"<some prefix>"),".",(0,i.yg)("inlineCode",{parentName:"p"},"<field name>"),".{label,description,enum options if applicable} e.g."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yml"},"account:\n  apiKey:\n    description:\n      label: Description\n      placeholder: Optionally enter a description to help you identify this API Key\n")),(0,i.yg)("p",null,"If a translation is not included in the user's selected language, it will fall back to English. The only time the Rancher UI devs should modify a non-English translation is when a key is renamed."))}u.isMDXComponent=!0}}]);